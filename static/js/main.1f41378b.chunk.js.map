{"version":3,"sources":["Components/Info.js","Components/Pokemon.js","index.js"],"names":["axios","require","default","Info","props","state","info","get","respuesta","this","setState","data","stats","console","log","undefined","className","id","map","poke","key","base_stat","effort","Component","Pokemon","pokemon","results","event","search","target","value","substr","filtrarNombre","filter","nombre","name","toLowerCase","indexOf","type","onChange","updateSearch","bind","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAGMA,G,WAAQC,EAAQ,IAASC,SA4DXC,E,kDAzDlB,WAAYC,GAAQ,IAAD,8BAEjB,cAAMA,IACDC,MAAQ,CAEXC,KAAM,IALS,E,yMAYUN,EAAMO,IAAI,kD,OAA5BC,E,OAEAC,KAAKC,SAAS,CAACJ,KAAOE,EAAUG,KAAKC,QACrCC,QAAQC,IAAI,oBACZD,QAAQC,IAAIN,G,gDAIhBK,QAAQC,IAAI,oBACZD,QAAQC,IAAR,MACAD,QAAQC,IAAIN,GACZK,QAAQC,IAAI,oB,8IAIN,IACDR,EAASG,KAAKJ,MAAdC,KAKN,YAHUS,IAAPT,IACJA,EAAO,IACTO,QAAQC,IAAIR,GAEL,yBAAKU,UAAU,QACf,2BAAOC,GAAG,UAAUD,UAAU,wBAChC,+BACE,4BACE,yCACA,wCAGJ,+BACCV,EAAKY,KAAI,SAACC,EAAMF,GACb,OACE,wBAAIG,IAAKH,GACP,4BAAKE,EAAKE,WACV,4BAAKF,EAAKG,mB,GAhDTC,aCDbvB,EAAQC,EAAQ,IAASC,QAuHhBsB,E,kDApHb,WAAYpB,GAAQ,IAAD,8BAEjB,cAAMA,IACDC,MAAQ,CAEXoB,QAAS,IALM,E,yMAuBOzB,EAAMO,IAC1B,yD,OADEC,E,OAIJC,KAAKC,SAAS,CAAEe,QAASjB,EAAUG,KAAKe,UACxCb,QAAQC,IAAI,oBACZD,QAAQC,IAAIN,G,gDAIZK,QAAQC,IAAI,oBACZD,QAAQC,IAAR,MACAD,QAAQC,IAAIN,EAAUkB,SACtBb,QAAQC,IAAI,oB,kJAOHa,GACXlB,KAAKC,SAAS,CAAEkB,OAAQD,EAAME,OAAOC,MAAMC,OAAO,EAAG,Q,+BAI7C,IAAD,OACDN,EAAYhB,KAAKJ,MAAjBoB,aAEUV,IAAZU,IAAuBA,EAAU,IACrCZ,QAAQC,IAAIW,GAEZ,IAAIO,EAAgBvB,KAAKJ,MAAMoB,QAAQQ,QACrC,SAACC,GACC,OAAiE,IAA1DA,EAAOC,KAAKC,cAAcC,QAAQ,EAAKhC,MAAMuB,WAIxD,OACE,yBAAKZ,UAAU,OACb,wCAoBA,mDACA,2BACEsB,KAAK,OACLR,MAAOrB,KAAKJ,MAAMuB,OAClBW,SAAU9B,KAAK+B,aAAaC,KAAKhC,QAGnC,2BAAOQ,GAAG,aAAaD,UAAU,wBAC/B,+BACE,4BACE,8CACA,+CAIJ,+BACGgB,EAAcd,KAAI,SAACgB,EAAQjB,GAC1B,OACE,wBAAIG,IAAKH,GACP,4BAAKiB,EAAOC,MACZ,4BAAKD,EAAOQ,WAOtB,6BACE,kBAAC,EAAD,Y,GA/GYnB,aCDtBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1f41378b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst axios = require('axios').default;\r\n\r\nclass Info extends Component {\r\n  constructor(props) {\r\n    // Método constructor clase \"Pokemon\"\r\n    super(props);   \r\n    this.state = {\r\n      // Objeto con elementos iniciales a modo de state.\r\n      info: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n       try{\r\n         var respuesta = await axios.get('http://pokeapi.salestock.net/api/v2/pokemon/1/');\r\n         //if(Array.isArray(respuesta.results))\r\n             this.setState({info : respuesta.data.stats})\r\n             console.log(\"================\");\r\n             console.log(respuesta);\r\n        // else\r\n            // this.setState({pokemon: [respuesta.results]}); \r\n     }catch(error){\r\n         console.log(\"================\");\r\n         console.log(error);\r\n         console.log(respuesta);\r\n         console.log(\"================\");\r\n     }\r\n     }\r\n\r\n     render() {\r\n        let  {info}  = this.state; // El Objeto Pokemon toma los estados.\r\n     \r\n        if(info===undefined)\r\n       info = []\r\n     console.log(info)\r\n        return (\r\n            <div className=\"App1\">\r\n            <table id=\"tbl-img\" className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Base stat</th>\r\n              <th>effort</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {info.map((poke, id) => {\r\n              return (\r\n                <tr key={id}>\r\n                  <td>{poke.base_stat}</td>\r\n                  <td>{poke.effort}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n            </div>\r\n         );\r\n       }\r\n     }\r\n     export default Info;","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Info from \"./Info\";\r\nconst axios = require(\"axios\").default;\r\n\r\nclass Pokemon extends Component {\r\n  constructor(props) {\r\n    // Método constructor clase \"Pokemon\"\r\n    super(props);\r\n    this.state = {\r\n      // Objeto con elementos iniciales a modo de state.\r\n      pokemon: [],\r\n    };\r\n  }\r\n  ///////////////////////////////////////////////////\r\n\r\n  async componentDidMount() {\r\n    /*fetch(\"https://pokeapi.co/api/v2/pokemon/\")\r\n      .then((respuesta) => {\r\n        return respuesta.json();\r\n      })\r\n      .then((personajes) => {\r\n        console.log(personajes);\r\n        this.setState({\r\n          pokemon: [personajes.results]\r\n        });\r\n      });*/\r\n\r\n    try {\r\n      var respuesta = await axios.get(\r\n        \"http://pokeapi.salestock.net/api/v2/pokemon/?limit=25\"\r\n      );\r\n      //if(Array.isArray(respuesta.results))\r\n      this.setState({ pokemon: respuesta.data.results });\r\n      console.log(\"================\");\r\n      console.log(respuesta);\r\n      // else\r\n      // this.setState({pokemon: [respuesta.results]});\r\n    } catch (error) {\r\n      console.log(\"================\");\r\n      console.log(error);\r\n      console.log(respuesta.results);\r\n      console.log(\"================\");\r\n    }\r\n  }\r\n\r\n  //onChange método que detecta cambios en el input !!\r\n  ///////////////////////////////////////////////////\r\n\r\n  updateSearch(event) {\r\n    this.setState({ search: event.target.value.substr(0, 20) });\r\n  }\r\n\r\n  ///////////////////////////////////////////////////\r\n  render() {\r\n    let { pokemon } = this.state; // El Objeto Pokemon toma los estados.\r\n\r\n    if (pokemon === undefined) pokemon = [];\r\n    console.log(pokemon);\r\n\r\n    let filtrarNombre = this.state.pokemon.filter(\r\n      (nombre) => {\r\n        return nombre.name.toLowerCase().indexOf(this.state.search) !== -1;\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>PokeShow</h1>\r\n        {/*<table id=\"tbl-Pokemon\" className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Pokemon Name</th>\r\n              <th>url</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pokemon.map((poke, id) => {\r\n              return (\r\n                <tr key={id}>\r\n                  <td>{poke.name}</td>\r\n                  <td>{poke.url}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          </table>*/}\r\n\r\n        <label>Filtrar nombre: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.search}\r\n          onChange={this.updateSearch.bind(this)}\r\n        ></input>\r\n\r\n        <table id=\"tbl-filter\" className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Pokemon's Name</th>\r\n              <th>Pokemon's url</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {filtrarNombre.map((nombre, id) => {\r\n              return (\r\n                <tr key={id}>\r\n                  <td>{nombre.name}</td>\r\n                  <td>{nombre.url}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div>\r\n          <Info />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pokemon;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Pokemon from './Components/Pokemon';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Pokemon />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}